# Kickstart file automatically generated by anaconda.

#version=DEVEL
install
text

repo --name="base"  --baseurl=http://mirror.optus.net/centos/5/os/x86_64/
repo --name="updates"  --baseurl=http://mirror.optus.net/centos/5/updates/x86_64/
 
repo --name="Extras"  --baseurl=http://mirror.optus.net/centos/5/extras/x86_64/
repo --name="epel"  --baseurl=https://dl.fedoraproject.org/pub/epel/5/x86_64/
repo --name="mycloud"  --baseurl=http://localhost/centos5-cloud/



lang en_US.UTF-8
keyboard us

network --onboot yes --device eth0 --mtu=1460 --bootproto dhcp --hostname changeme
rootpw  --iscrypted $1$nroTSYJT$w1.TSIJEPry/WsIw1YCoZ0

firewall --port=22:tcp --port=80:tcp
authconfig --enableshadow --enablemd5
selinux --enforcing
timezone --utc Australia/Sydney
bootloader --location=mbr --driveorder=vda --append="crashkernel=auto console=tty0 console=ttyS0,38400n8d"

zerombr yes 
clearpart --all --initlabel

part / --fstype=ext3 --size=1 --grow
firstboot --disable


# shutdown when installation completes
shutdown

%packages --nobase
@Core
epel-release
audit
virtio_scsi-kmod
google-compute-engine
google-compute-engine-init
google-config

-sendmail
-*firmware
-iscsi-initiator-utils
-Deployment_Guide-en-US
-mysql

#%end

%post --interpreter /bin/bash 
exec < /dev/tty3 > /dev/tty3
chvt 3
echo
echo "################################"
echo "# Running Post Configuration   #"
echo "################################"
#(

rm -f /root/anaconda-ks.cfg
rm -f /root/install.log*
passwd -d root
passwd -l root


touch /root/firstrun

sed -i "/HWADDR/d" /etc/sysconfig/network-scripts/ifcfg-eth0
rm -rf lost+found
rm -rf /tmp/*

cat <<EOF >> /etc/yum.conf

multilib_policy=best
exclude=*.i386 *.i686

EOF

#/sbin/service sshd restart
/sbin/chkconfig sshd on


echo -e "##############################"
echo "Adding admin user"
echo -e "##############################\n"

sed -i 's/# %wheel        ALL=(ALL)       NOPASSWD: ALL/%wheel        ALL=(ALL)       NOPASSWD: ALL/' /etc/sudoers
echo 'Defaults env_keep += "PATH PYTHONPATH"' >> /etc/sudoers

#add admin to sudoers
/usr/sbin/groupadd wheel

cat <<EOF >> /etc/sudoers
## Read drop-in files from /etc/sudoers.d (the # here does not mean a comment)
#includedir /etc/sudoers.d
EOF

mkdir -p /etc/sudoers.d

# turn off firstboot for livecd boots
/sbin/chkconfig --level 345 firstboot off 2>/dev/null
echo "RUN_FIRSTBOOT=NO" > /etc/sysconfig/firstboot

echo -e "##############################"
echo "Confing ntp service"
echo -e "##############################\n"

cat <<EOF > /etc/ntp.conf
server 169.254.169.254 iburst
EOF

echo '30 * * * * root /usr/sbin/ntpd -q -u ntp:ntp' > /etc/cron.d/ntpd

# turn on ntpd
/sbin/chkconfig ntpd on 2>/dev/null


echo "Removing random-seed so it's not the same in every image."
rm -f /var/lib/random-seed

echo "169.254.169.254 metadata.google.internal metadata" >> /etc/hosts

cat <<EOF > /etc/dhcp/dhclient-eth0.conf    

supersede subnet-mask 255.255.0.0;

# Set the dhclient retry interval to 10 seconds instead of 5 minutes.
retry 10;

EOF

sed -i "/^splashimage=/d" /boot/grub/grub.conf
sed -i "s/rhgb//g" /boot/grub/grub.conf
sed -i "s/quiet//g" /boot/grub/grub.conf

echo -e "##############################"
echo "Enabling google cloud services"
echo -e "##############################\n"

for s in  google-clock-skew-daemon google-ip-forwarding-daemon google-accounts-daemon;
do
        echo "Enabling $s at all levels"
        /sbin/chkconfig  $s on
done


/sbin/chkconfig --level 345 network on 

echo -e "##############################"
echo "Disabling unnecessary services"
echo -e "##############################\n"

for s in atd autofs isdn messagebus \
                 smartd yum-updated portmap nfslock \
          iscsi iscsid cpuspeed bluetooth kudzu ip6tables \
         netfs xfs; do
        echo "Disabling $s at all levels"
        /sbin/chkconfig --level 0123456 $s off
#        /sbin/service $s stop
done

kern=`ls $ROOTFS/boot/vmlin*|awk -F/ '{print $NF}'`
ird=`ls $ROOTFS/boot/initrd*.img|awk -F/ '{print $NF}'`
kernver=$(echo ${kern} | sed "s/vmlinuz-//")

cat > "$ROOTFS/boot/grub/grub.conf" <<EOF
default 0
timeout 5
serial --unit=0 --speed=38400
terminal --timeout=0 serial console

title CentOS5 (KERNVER)
root (hd0,0)
kernel /boot/vmlinuz ro root=LABEL=/ console=tty0 crashkernel=auto rd_NO_LUKS rd_NO_MD rd_NO_LVM console=ttyS0,38400n8 
initrd /boot/initrdfile

EOF

sed -i "s/vmlinuz/$kern/" /boot/grub/grub.conf
sed -i "s/KERNVER/$kernver/" /boot/grub/grub.conf
sed -i "s/initrdfile/$ird/" /boot/grub/grub.conf

cd /boot/grub
cd /etc
ln -s  ../boot/grub/grub.conf grub.conf


cat <<EOF >>/etc/modprobe.conf 

alias scsi_hostadapter1 ata_piix
alias eth0 virtio_net
alias scsi_hostadapter2 virtio_blk
alias scsi_hostadapter3 virtio_scsi

EOF

/sbin/mkinitrd -v -f --allow-missing --builtin uhci-hcd --builtin ohci-hcd --builtin ehci-hcd --preload dm-mod --preload linear --preload ext3 --preload virtio_pci --preload virtio_blk --preload virtio_scsi --preload ata_generic --preload virtio_net --preload jbd --with=ext3 --with=sd_mod --with=virtio --with=virtio_net --with=virtio_blk --with=virtio_scsi --with=virtio_pci --with virtio_ring --with=jbd --with=virtio_balloon --with=scsi_mod --with=sata_nv /boot/${ird} ${kernver}

echo "Cleaning old yum repodata."
yum history new
yum clean all
truncate -c -s 0 /var/log/yum.log

echo "Fixing SELinux contexts."
/usr/sbin/fixfiles -R -a restore

chvt 1
%end

%post --nochroot
%end
